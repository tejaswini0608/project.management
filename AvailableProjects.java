/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package project.management;
import java.awt.*;
import java.awt.event.*;
import javax.swing.*;
import java.io.*;
import javax.swing.JOptionPane;

/**
 *
 * @author Tejaswini Kumar
 */
public class AvailableProjects extends javax.swing.JFrame {

    /**
     * Creates new form AvailableProjects
     */
    public AvailableProjects() {
        initComponents();
                this.setSize(600, 600);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel1.setText("Pending Projects");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(175, 11, 131, 30);

        jLabel2.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel2.setText("Multiple Routing Configurations");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(37, 73, 269, 41);

        jLabel3.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel3.setText("Network Border Patrol ");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(35, 120, 271, 34);

        jLabel4.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel4.setText("Capturing Router Congestion and Delay ");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(35, 160, 271, 46);

        jLabel5.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel5.setText("Minimizing File Download Time");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(35, 212, 271, 38);

        jLabel6.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel6.setText("Image Transport Protocol ITP ");
        getContentPane().add(jLabel6);
        jLabel6.setBounds(35, 256, 296, 32);

        jButton1.setText("Assign");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(349, 83, 63, 23);

        jButton2.setText("Assign");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2);
        jButton2.setBounds(349, 127, 63, 23);

        jButton3.setText("Assign");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3);
        jButton3.setBounds(349, 173, 63, 23);

        jButton4.setText("Assign");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton4);
        jButton4.setBounds(349, 221, 63, 23);

        jButton5.setText("Assign");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton5);
        jButton5.setBounds(349, 262, 63, 23);

        jButton6.setText("Back");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton6);
        jButton6.setBounds(10, 17, 55, 23);

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/project/management/background.jpg"))); // NOI18N
        getContentPane().add(jLabel7);
        jLabel7.setBounds(0, 0, 530, 310);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    
             /*   JPanel panel = new JPanel();
                panel.add(new JLabel("Please make a selection:"));
                DefaultComboBoxModel model = new DefaultComboBoxModel();
                model.addElement("Chocolate");
                model.addElement("Strewberry");
                model.addElement("Vanilla");
                JComboBox comboBox = new JComboBox(model);
                panel.add(comboBox);

                int result = JOptionPane.showConfirmDialog(null, panel, "Flavor", JOptionPane.OK_CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE);
                switch (result) {
                    case JOptionPane.OK_OPTION:
                        System.out.println("You selected " + comboBox.getSelectedItem());
                        break;
                }
*/


                  String list_id_string[]=new String[7];
                  String list_name_string[]=new String[7];

                      public String path="F:\\Project_Management\\";

  
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        try {
	            File folder=new File("F:\\Project_Management");
	        File[] list_of_id = folder.listFiles();

	    for (int i = 0; i < list_of_id.length; i++) {
	      if (list_of_id[i].isFile()) {
	        System.out.println("File " + list_of_id[i].getName());
	      } 
	      else if (list_of_id[i].isDirectory()) {
	        list_id_string[i]=list_of_id[i].getName();
	          System.out.println("list_id_string[i]"+list_id_string[i]);
	      }
	          
	    }
	    
	      for (int y = 0; y < list_of_id.length; y++) {
	      File folder1=new File(path+list_id_string[y]);
	       File[] name = folder1.listFiles();
	               list_name_string[y]=list_id_string[y]+"-"+name[0].getName();
	               System.out.println("list_name_string"+list_name_string[y]);
	          }
	    
	    
	    
	        
	        
	        JList list=new JList( list_name_string);
	        JOptionPane.showMessageDialog(null, list, "Choose: employee ID-NAME",JOptionPane.PLAIN_MESSAGE, null);
	        System.out.println(".................................");
	        String selected = list.getSelectedValue().toString();
	        System.out.println("selected"+selected);
	        String[] selected_id_assignment = selected.split("-");
	        System.out.println("selected id"+selected_id_assignment[0]);
            System.out.println(path+selected_id_assignment[0]);
	        
	       //create a file in the name of project in the selected file
	     
	    	
	                File folder2=new File(path+selected_id_assignment[0]);
	               File[] name1 = folder2.listFiles();
	                 System.out.println("after selected item name  ;;"+name1[0]);
	                 
	               File domain_selected=new File(name1[0].toString());
	               System.out.println("\n"+name1[0].toString());
	               File[] domain2 = domain_selected.listFiles();
	               System.out.println("........................................................................................................................");
	               System.out.println(domain2[0]);
	               String project_name="Project:"+jLabel2.getText();
                       System.out.println(project_name+".......project_name.........");
                       
                       
	               File assign_project=new File(domain2[0].toString()+"\\"+jLabel2.getText());
	               System.out.println("............................."+domain2[0].toString());
	               System.out.println(assign_project);
	               System.out.println(".............."+!assign_project.exists()+"..........................");
	              // assign_project.mkdir();
	           if (!assign_project.exists()) {
	               
	        if(assign_project.mkdir())
			{
				System.out.println("Folder Created");
	                        
			}
			else
			{
				System.out.println("Failed  ");
			}
	        
	           }
	           
	           
	    	} catch (Exception e) {
		      e.printStackTrace();
		}
      
        //name[0].getName();
          
      
           
           
        // JOptionPane.showOptionDialog(rootPane, evt, title, WIDTH, HEIGHT, icon, options, NORMAL)
        //JOptionPane.showOptionDialog(null,"Met?","Ch",JOptionPane.YES_NO_OPTION,JOptionPane.INFORMATION_MESSAGE,null,null,null);
                              
        
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        TeamLeader Team=new TeamLeader();
                                setVisible(false);
                                Team.setVisible(true);
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        try {
	            File folder=new File("F:\\Project_Management");
	        File[] list_of_id = folder.listFiles();

	    for (int i = 0; i < list_of_id.length; i++) {
	      if (list_of_id[i].isFile()) {
	        System.out.println("File " + list_of_id[i].getName());
	      } 
	      else if (list_of_id[i].isDirectory()) {
	        list_id_string[i]=list_of_id[i].getName();
	          System.out.println("list_id_string[i]"+list_id_string[i]);
	      }
	          
	    }
	    
	      for (int y = 0; y < list_of_id.length; y++) {
	      File folder1=new File(path+list_id_string[y]);
	       File[] name = folder1.listFiles();
	               list_name_string[y]=list_id_string[y]+"-"+name[0].getName();
	               System.out.println("list_name_string"+list_name_string[y]);
	          }
	    
	    
	    
	        
	        
	        JList list=new JList( list_name_string);
	        JOptionPane.showMessageDialog(null, list, "Choose: employee ID-NAME",JOptionPane.PLAIN_MESSAGE, null);
	        System.out.println(".................................");
	        String selected = list.getSelectedValue().toString();
	        System.out.println("selected"+selected);
	        String[] selected_id_assignment = selected.split("-");
	        System.out.println("selected id"+selected_id_assignment[0]);
            System.out.println(path+selected_id_assignment[0]);
	        
	       //create a file in the name of project in the selected file
	     
	    	
	                File folder2=new File(path+selected_id_assignment[0]);
	               File[] name1 = folder2.listFiles();
	                 System.out.println("after selected item name  ;;"+name1[0]);
	                 
	               File domain_selected=new File(name1[0].toString());
	               System.out.println("\n"+name1[0].toString());
	               File[] domain2 = domain_selected.listFiles();
	               System.out.println("........................................................................................................................");
	               System.out.println(domain2[0]);
	               String project_name="Project:"+jLabel2.getText();
                       System.out.println(project_name+".......project_name.........");
                       
                       
	               File assign_project=new File(domain2[0].toString()+"\\"+jLabel3.getText());
	               System.out.println("............................."+domain2[0].toString());
	               System.out.println(assign_project);
	               System.out.println(".............."+!assign_project.exists()+"..........................");
	              // assign_project.mkdir();
	           if (!assign_project.exists()) {
	               
	        if(assign_project.mkdir())
			{
				System.out.println("Folder Created");
	                        
			}
			else
			{
				System.out.println("Failed  ");
			}
	        
	           }
	           
	           
	    	} catch (Exception e) {
		      e.printStackTrace();
		}
      
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        try {
	            File folder=new File("F:\\Project_Management");
	        File[] list_of_id = folder.listFiles();

	    for (int i = 0; i < list_of_id.length; i++) {
	      if (list_of_id[i].isFile()) {
	        System.out.println("File " + list_of_id[i].getName());
	      } 
	      else if (list_of_id[i].isDirectory()) {
	        list_id_string[i]=list_of_id[i].getName();
	          System.out.println("list_id_string[i]"+list_id_string[i]);
	      }
	          
	    }
	    
	      for (int y = 0; y < list_of_id.length; y++) {
	      File folder1=new File(path+list_id_string[y]);
	       File[] name = folder1.listFiles();
	               list_name_string[y]=list_id_string[y]+"-"+name[0].getName();
	               System.out.println("list_name_string"+list_name_string[y]);
	          }
	    
	    
	    
	        
	        
	        JList list=new JList( list_name_string);
	        JOptionPane.showMessageDialog(null, list, "Choose: employee ID-NAME",JOptionPane.PLAIN_MESSAGE, null);
	        System.out.println(".................................");
	        String selected = list.getSelectedValue().toString();
	        System.out.println("selected"+selected);
	        String[] selected_id_assignment = selected.split("-");
	        System.out.println("selected id"+selected_id_assignment[0]);
            System.out.println(path+selected_id_assignment[0]);
	        
	       //create a file in the name of project in the selected file
	     
	    	
	                File folder2=new File(path+selected_id_assignment[0]);
	               File[] name1 = folder2.listFiles();
	                 System.out.println("after selected item name  ;;"+name1[0]);
	                 
	               File domain_selected=new File(name1[0].toString());
	               System.out.println("\n"+name1[0].toString());
	               File[] domain2 = domain_selected.listFiles();
	               System.out.println("........................................................................................................................");
	               System.out.println(domain2[0]);
	               String project_name="Project:"+jLabel2.getText();
                       System.out.println(project_name+".......project_name.........");
                       
                       
	               File assign_project=new File(domain2[0].toString()+"\\"+jLabel4.getText());
	               System.out.println("............................."+domain2[0].toString());
	               System.out.println(assign_project);
	               System.out.println(".............."+!assign_project.exists()+"..........................");
	              // assign_project.mkdir();
	           if (!assign_project.exists()) {
	               
	        if(assign_project.mkdir())
			{
				System.out.println("Folder Created");
	                        
			}
			else
			{
				System.out.println("Failed  ");
			}
	        
	           }
	           
	           
	    	} catch (Exception e) {
		      e.printStackTrace();
		}
      
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        try {
	            File folder=new File("F:\\Project_Management");
	        File[] list_of_id = folder.listFiles();

	    for (int i = 0; i < list_of_id.length; i++) {
	      if (list_of_id[i].isFile()) {
	        System.out.println("File " + list_of_id[i].getName());
	      } 
	      else if (list_of_id[i].isDirectory()) {
	        list_id_string[i]=list_of_id[i].getName();
	          System.out.println("list_id_string[i]"+list_id_string[i]);
	      }
	          
	    }
	    
	      for (int y = 0; y < list_of_id.length; y++) {
	      File folder1=new File(path+list_id_string[y]);
	       File[] name = folder1.listFiles();
	               list_name_string[y]=list_id_string[y]+"-"+name[0].getName();
	               System.out.println("list_name_string"+list_name_string[y]);
	          }
	    
	    
	    
	        
	        
	        JList list=new JList( list_name_string);
	        JOptionPane.showMessageDialog(null, list, "Choose: employee ID-NAME",JOptionPane.PLAIN_MESSAGE, null);
	        System.out.println(".................................");
	        String selected = list.getSelectedValue().toString();
	        System.out.println("selected"+selected);
	        String[] selected_id_assignment = selected.split("-");
	        System.out.println("selected id"+selected_id_assignment[0]);
            System.out.println(path+selected_id_assignment[0]);
	        
	       //create a file in the name of project in the selected file
	     
	    	
	                File folder2=new File(path+selected_id_assignment[0]);
	               File[] name1 = folder2.listFiles();
	                 System.out.println("after selected item name  ;;"+name1[0]);
	                 
	               File domain_selected=new File(name1[0].toString());
	               System.out.println("\n"+name1[0].toString());
	               File[] domain2 = domain_selected.listFiles();
	               System.out.println("........................................................................................................................");
	               System.out.println(domain2[0]);
	               String project_name="Project:"+jLabel2.getText();
                       System.out.println(project_name+".......project_name.........");
                       
                       
	               File assign_project=new File(domain2[0].toString()+"\\"+jLabel5.getText());
	               System.out.println("............................."+domain2[0].toString());
	               System.out.println(assign_project);
	               System.out.println(".............."+!assign_project.exists()+"..........................");
	              // assign_project.mkdir();
	           if (!assign_project.exists()) {
	               
	        if(assign_project.mkdir())
			{
				System.out.println("Folder Created");
	                        
			}
			else
			{
				System.out.println("Failed  ");
			}
	        
	           }
	           
	           
	    	} catch (Exception e) {
		      e.printStackTrace();
		}
      
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        try {
	            File folder=new File("F:\\Project_Management");
	        File[] list_of_id = folder.listFiles();

	    for (int i = 0; i < list_of_id.length; i++) {
	      if (list_of_id[i].isFile()) {
	        System.out.println("File " + list_of_id[i].getName());
	      } 
	      else if (list_of_id[i].isDirectory()) {
	        list_id_string[i]=list_of_id[i].getName();
	          System.out.println("list_id_string[i]"+list_id_string[i]);
	      }
	          
	    }
	    
	      for (int y = 0; y < list_of_id.length; y++) {
	      File folder1=new File(path+list_id_string[y]);
	       File[] name = folder1.listFiles();
	               list_name_string[y]=list_id_string[y]+"-"+name[0].getName();
	               System.out.println("list_name_string"+list_name_string[y]);
	          }
	    
	    
	    
	        
	        
	        JList list=new JList( list_name_string);
	        JOptionPane.showMessageDialog(null, list, "Choose: employee ID-NAME",JOptionPane.PLAIN_MESSAGE, null);
	        System.out.println(".................................");
	        String selected = list.getSelectedValue().toString();
	        System.out.println("selected"+selected);
	        String[] selected_id_assignment = selected.split("-");
	        System.out.println("selected id"+selected_id_assignment[0]);
            System.out.println(path+selected_id_assignment[0]);
	        
	       //create a file in the name of project in the selected file
	     
	    	
	                File folder2=new File(path+selected_id_assignment[0]);
	               File[] name1 = folder2.listFiles();
	                 System.out.println("after selected item name  ;;"+name1[0]);
	                 
	               File domain_selected=new File(name1[0].toString());
	               System.out.println("\n"+name1[0].toString());
	               File[] domain2 = domain_selected.listFiles();
	               System.out.println("........................................................................................................................");
	               System.out.println(domain2[0]);
	               String project_name="Project:"+jLabel2.getText();
                       System.out.println(project_name+".......project_name.........");
                       
                       
	               File assign_project=new File(domain2[0].toString()+"\\"+jLabel6.getText());
	               System.out.println("............................."+domain2[0].toString());
	               System.out.println(assign_project);
	               System.out.println(".............."+!assign_project.exists()+"..........................");
	              // assign_project.mkdir();
	           if (!assign_project.exists()) {
	               
	        if(assign_project.mkdir())
			{
				System.out.println("Folder Created");
	                        
			}
			else
			{
				System.out.println("Failed  ");
			}
	        
	           }
	           
	           
	    	} catch (Exception e) {
		      e.printStackTrace();
		}
      
    }//GEN-LAST:event_jButton5ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AvailableProjects.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AvailableProjects.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AvailableProjects.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AvailableProjects.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AvailableProjects().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    // End of variables declaration//GEN-END:variables
}
